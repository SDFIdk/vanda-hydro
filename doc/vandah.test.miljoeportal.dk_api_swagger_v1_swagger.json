{
  "openapi": "3.0.1",
  "info": {
    "title": "Dmp.Hydro.Api",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "With API"
    },
    {
      "url": "/",
      "description": "Root"
    }
  ],
  "paths": {
    "/claims": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Gets claims of current user.",
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.ClaimTypeValueResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stations": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Creates a hydro station. Requires operator or admin roles.",
        "operationId": "CreateStation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.CreateStationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The station id that can be used to access the station.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.CreateStationResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Gets a list of stations",
        "operationId": "GetStations",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "A 8 digits station id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stationOwnerCvr",
            "in": "query",
            "description": "Station owner cvr with DK12345678 format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorCvr",
            "in": "query",
            "description": "Operator cvr with DK12345678 format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameterSc",
            "in": "query",
            "description": "Parameter stancode from stancodelist 1008",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "examinationTypeSc",
            "in": "query",
            "description": "Examination type stancode from stancodelist 1101",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withResultsAfter",
            "in": "query",
            "description": "Only return stations with examinations that got results measured after a point in time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "withResultsCreatedAfter",
            "in": "query",
            "description": "Only return stations with examiantion that contains results created after a point in time. This is the point in time there where created/updated in the system and not the actual measurement time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.StationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stations/update": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Updates a station. A station is identified by either StationId or OperatorStationId.",
        "operationId": "UpdateStation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.UpdateStationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The station was updated."
          }
        }
      }
    },
    "/measurement-points/update": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Updates a measurement point. StationId and MeasurementPointNumber are keys to identify the resource.",
        "operationId": "UpdateMeasurementPoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.UpdateMeasurementPointRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/measurements": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Adds measurements to a measurement point.",
        "operationId": "CreateMeasurements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.CreateMeasurementsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.CreateMeasurementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/measurements/update": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Updates measurement results. A measurement is identified by measurement date. If it does not exist, skip the update. If the result has not changed, skip the update. Returns the updated timestamp of all results.",
        "operationId": "UpdateMeasurements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.UpdateMeasurementsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.UpdateMeasurementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/measurements/delete-range": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Deletes measurements within a date range.",
        "operationId": "DeleteDateRangedMeasurements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.DeleteRangedMeasurementsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.DeleteMeasurementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/measurements/delete": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Deletes measurements within a specific list of measurement dates.",
        "operationId": "DeleteSpecificDateMeasurements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.DeleteSpecificMeasurementsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.DeleteMeasurementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/measurements/delete-result-version": {
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Deletes a result version of a measurement.",
        "operationId": "DeleteResultVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.DeleteResultVersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.DeleteMeasurementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/water-levels": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns current results of water level measurements.",
        "operationId": "GetWaterLevels",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number. If not specified, returns data for all measurement points.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.WaterLevelMeasurementResultStreamlineResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water-flows": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns current results of water flow measurements.",
        "operationId": "GetWaterFlows",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number. If not specified, returns data for all measurement points.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.MeasurementResultStreamlineResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/measurements/results/current": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns measurements with the current result.",
        "operationId": "GetMeasurementsWithCurrentResults",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "examinationTypeSc",
            "in": "query",
            "description": "Examination type stancode from stancodelist 1101",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parameterSc",
            "in": "query",
            "description": "Parameter stancode from stancodelist 1008",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.MeasurementResultResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/measurements/results/first": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns measurements with the first registered result.",
        "operationId": "GetMeasurementsWithFirstResults",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "examinationTypeSc",
            "in": "query",
            "description": "Examination type stancode from stancodelist 1101",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parameterSc",
            "in": "query",
            "description": "Parameter stancode from stancodelist 1008",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.MeasurementResultResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/measurements/results/all": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns measurements with all results.",
        "operationId": "GetMeasurementsWithAllResults",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "examinationTypeSc",
            "in": "query",
            "description": "Examination type stancode from stancodelist 1101",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parameterSc",
            "in": "query",
            "description": "Parameter stancode from stancodelist 1008",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.MeasurementResultResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/measurements/results/valid-from": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns measurements with result that is valid and created/updated before the asOff parameter. This allows the retrival of data as it was stored in the system on a specific point in time",
        "operationId": "GetMeasurementsWithValidFromResults",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOff",
            "in": "query",
            "description": "The closest date time which is before a result was created/updated (Not the measurement time, but the time is was created). AsOff must be specified. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "measurementPointNumber",
            "in": "query",
            "description": "Measurement point number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "examinationTypeSc",
            "in": "query",
            "description": "Examination type stancode from stancodelist 1101",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parameterSc",
            "in": "query",
            "description": "Parameter stancode from stancodelist 1008",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "From measurement date time to include in the response. Return results on the specified date time and later. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To measurement date time to include in the response. Return results on the specified date time and ealier. Both From and To must be specified if one of them presents. If -from/-to is not specified, it returns data for the last 24 hours. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return results that are created or updated after the specified date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.MeasurementResultResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logger-associations": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns stations with associated logger if there is.",
        "operationId": "GetLoggerAssociations",
        "parameters": [
          {
            "name": "stationId",
            "in": "query",
            "description": "Station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorStationId",
            "in": "query",
            "description": "Operator station id. Station id or Operator station id must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loggerId",
            "in": "query",
            "description": "Logger id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stationOwnerCvr",
            "in": "query",
            "description": "Station owner CVR with DK format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorCvr",
            "in": "query",
            "description": "Operator CVR with DK format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Specifies the format of the response. Possible value, if specified, is csv or parquet only. If not specified, the result is json.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.LoggerAssociationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config/examination-types": {
      "get": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Returns the examination types with mapping and constraints.",
        "operationId": "ConfigGetExaminationTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.ExaminationTypeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dmp.Hydro.Api"
        ],
        "summary": "Updates the examination type with mapping and constraints by examination type Sc and measurement point type Sc. Creates new one if it does not exist.",
        "operationId": "ConfigUpdateExaminationType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.UpdateExaminationTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dmp.Hydro.Api.ClaimTypeValueResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.CreateMeasurementsRequest": {
        "required": [
          "examinationTypeSc",
          "measurementPointNumber",
          "measurements",
          "parameterSc",
          "station",
          "unitSc"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number in the station",
            "format": "int32"
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode, a subset of stancode 1101",
            "format": "int32"
          },
          "loggerId": {
            "type": "string",
            "description": "Logger id",
            "nullable": true
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode, a subset of stancode list 1008",
            "format": "int32"
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode, a subset of stancode list 1009",
            "format": "int32"
          },
          "transactionBased": {
            "type": "boolean",
            "description": "True: The batch is treated as a transaction. If one or more fails, no data is persisted in the database. False: Measurements are treated individually. Some might fail while others are persisted in the database."
          },
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.MeasurementRequest"
            },
            "description": "A list of measurements on the measurement point"
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.CreateStationRequest": {
        "required": [
          "location",
          "locationTypeSc",
          "stationOwnerCvr"
        ],
        "type": "object",
        "properties": {
          "operatorStationId": {
            "type": "string",
            "description": "A unique operator station id within the operator organization",
            "nullable": true
          },
          "locationTypeSc": {
            "type": "integer",
            "description": "A subset of stancode list 1002",
            "format": "int32"
          },
          "stationOwnerCvr": {
            "minLength": 1,
            "type": "string",
            "description": "Station owner CVR with the format of DK12345678"
          },
          "operatorCvr": {
            "type": "string",
            "description": "Operator CVR with the format of DK12345678",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Station name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Station description",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.Location"
          },
          "waterAreaNr": {
            "type": "string",
            "description": "Water area number",
            "nullable": true
          },
          "dguNumber": {
            "type": "string",
            "description": "DGU number of Groundwater station",
            "nullable": true
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "The stancode of measurement point type (subset of stancode list 1002) that is created with the station automatically. If it is not presented, measurement point type is decided by the system",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.DeleteRangedMeasurementsRequest": {
        "required": [
          "examinationTypeSc",
          "measurementPointNumber",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "fromDateTime": {
            "type": "string",
            "description": "From date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time",
            "nullable": true
          },
          "toDateTime": {
            "type": "string",
            "description": "To date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.DeleteResultVersionRequest": {
        "required": [
          "changedTimestamp",
          "examinationTypeSc",
          "measurementDateTime",
          "measurementPointNumber",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "changedTimestamp": {
            "type": "string",
            "description": "Changed timestamp. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.DeleteSpecificMeasurementsRequest": {
        "required": [
          "examinationTypeSc",
          "measurementPointNumber",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "measurementDateTimes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "description": "A list of measurement dates.Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.Location": {
        "required": [
          "srid",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "The X coordinate in SRID:25832",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "The Y coordinate in SRID:25832",
            "format": "double"
          },
          "srid": {
            "minLength": 1,
            "type": "string",
            "description": "Must be 25832"
          }
        },
        "additionalProperties": false,
        "description": "A SRID:25832 value"
      },
      "Dmp.Hydro.Api.Requests.MeasurementRequest": {
        "required": [
          "measurementDateTime",
          "result"
        ],
        "type": "object",
        "properties": {
          "formulaId": {
            "type": "string",
            "description": "Formula id",
            "nullable": true
          },
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "result": {
            "type": "number",
            "description": "Result",
            "format": "double"
          },
          "reasonCodeSc": {
            "type": "integer",
            "description": "Reason code stancode, a subset of stancode list 1188",
            "format": "int32",
            "nullable": true
          },
          "refPointText": {
            "type": "string",
            "description": "Reference point text, required for examination type sc 30, unavailable for other types",
            "nullable": true
          },
          "distToFixPointM": {
            "type": "number",
            "description": "Distance to fix point (meter), required for examination type sc 30, unavailable for other types",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.ResultRequest": {
        "required": [
          "measurementDateTime",
          "result"
        ],
        "type": "object",
        "properties": {
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement time.Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "result": {
            "type": "number",
            "description": "Result",
            "format": "double"
          },
          "reasonCodeSc": {
            "type": "integer",
            "description": "Reason code stancode, a subset of stancode list 1188",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.StationIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Vanda station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A station can be identified using either Id or OperatorStationId"
      },
      "Dmp.Hydro.Api.Requests.UpdateExaminationTypeRequest": {
        "required": [
          "examinationTypeName",
          "examinationTypeSc",
          "parameterSc",
          "reasonCodesSc",
          "unitSc"
        ],
        "type": "object",
        "properties": {
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode, a subset of stancode list 1101",
            "format": "int32"
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "Measurement point type stancode, a subset of stancode list 1002",
            "format": "int32",
            "nullable": true
          },
          "reasonCodesSc": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of reason codes stancode, a subset of stancode list 1188"
          },
          "examinationTypeName": {
            "minLength": 1,
            "type": "string",
            "description": "Examination type name"
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode, a subset of stancode list 1008",
            "format": "int32"
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode, a subset of stancode list 1009",
            "format": "int32"
          },
          "min": {
            "type": "number",
            "description": "Min value of measurements under the examination type",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "description": "Max value of measurements under the examination type",
            "format": "double",
            "nullable": true
          },
          "decimals": {
            "type": "integer",
            "description": "Number of decimals rounded for the measurements values",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description for the examination type",
            "nullable": true
          },
          "measurementIntervalMin": {
            "type": "integer",
            "description": "Minimum interval between measurement in minutes",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.UpdateMeasurementPointRequest": {
        "required": [
          "location",
          "measurementPointTypeSc",
          "name",
          "number",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "number": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "Measurement point type stancode, a subset of stancode list 1002",
            "format": "int32"
          },
          "location": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.Location"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Measurement point name"
          },
          "description": {
            "type": "string",
            "description": "Measurement point description",
            "nullable": true
          },
          "intakeNumber": {
            "type": "integer",
            "description": "Intake number of Grundvand station",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.UpdateMeasurementsRequest": {
        "required": [
          "examinationTypeSc",
          "measurementPointNumber",
          "results",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number in the station",
            "format": "int32"
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode, a subset of stancode 1101",
            "format": "int32"
          },
          "transactionBased": {
            "type": "boolean",
            "description": "True: The batch is treated as a transaction. If one or more fails, no data is persisted in the database. False: Measurements are treated individually. Some might fail while others are persisted in the database."
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.ResultRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Requests.UpdateStationRequest": {
        "required": [
          "location",
          "station"
        ],
        "type": "object",
        "properties": {
          "station": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.StationIdentifier"
          },
          "stationOwnerCvr": {
            "type": "string",
            "description": "Station owner cvr. Update the new station owner if it is provided",
            "nullable": true
          },
          "operatorCvr": {
            "type": "string",
            "description": "Operator cvr. Update the new operator if it is provided",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "A unique operator station id within the operator organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Station name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Station description",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Requests.Location"
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.CreateMeasurementsResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "The time data is stored in the database for the batch",
            "format": "date-time"
          },
          "transactionId": {
            "type": "string",
            "description": "Batch transaction id",
            "format": "uuid",
            "nullable": true
          },
          "successful": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.SuccessfulResponse"
            },
            "description": "A list of measurements that were stored",
            "nullable": true
          },
          "failed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.FailedResponse"
            },
            "description": "A list of measurements that were failed to store",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.CreateStationResponse": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string",
            "description": "8-digit station id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.DeleteMeasurementsResponse": {
        "type": "object",
        "properties": {
          "numberOfDeletedMeasurements": {
            "type": "integer",
            "description": "The number of deleted measurements",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.ExaminationTypeResponse": {
        "type": "object",
        "properties": {
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "examinationTypeName": {
            "type": "string",
            "description": "Examination type name",
            "nullable": true
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "Measurement point type stancode, a subset of stancode list 1002",
            "format": "int32"
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode, a subset of stancode list 1008",
            "format": "int32"
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode, a subset of stancode list 1009",
            "format": "int32"
          },
          "min": {
            "type": "number",
            "description": "Min value of measurements under the examination type",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "description": "Max value of measurements under the examination type",
            "format": "double",
            "nullable": true
          },
          "measurementIntervalMin": {
            "type": "integer",
            "description": "The minimum interval between measurement in minutes",
            "format": "int32"
          },
          "decimals": {
            "type": "integer",
            "description": "Number of decimals rounded for the measurements values",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description for the examination type",
            "nullable": true
          },
          "reasonCodesSc": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of reason codes stancode, a subset of stancode list 1188",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.FailedResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Measurement datetime",
            "format": "date-time"
          },
          "isSuccess": {
            "type": "boolean",
            "description": "If transaction-based, this will be 'true' for the measurement which succeeds and 'false' for the ones which fails"
          },
          "errorCode": {
            "type": "integer",
            "description": "Error code",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.LocationResponse": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "X coordinate in UTM32N",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Y coordinate in UTM32N",
            "format": "double"
          },
          "srid": {
            "type": "string",
            "description": "Location SRID",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.LoggerAssociationResponse": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string",
            "description": "A 8-digit station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          },
          "stationOwnerCvr": {
            "type": "string",
            "description": "Station owner CVR",
            "nullable": true
          },
          "loggerId": {
            "type": "string",
            "description": "Logger id",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Date and time when the logger association was created. Blank if no logger associated",
            "format": "date-time",
            "nullable": true
          },
          "effective": {
            "type": "string",
            "description": "Date and time from when measurements are being read from the associated logger. Blank if no logger associated",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.MeasurementResultResponse": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string",
            "description": "A 8-digit station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          },
          "stationName": {
            "type": "string",
            "description": "Station name",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.ResultResponse"
            },
            "description": "Measurement results",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.MeasurementResultStreamlineResponse": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string",
            "description": "A 8-digit station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.ResultStreamlineResponse"
            },
            "description": "Measurement results",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.ResultResponse": {
        "type": "object",
        "properties": {
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "Measurement point type stancode",
            "format": "int32"
          },
          "measurementPointType": {
            "type": "string",
            "description": "Measurement point type name",
            "nullable": true
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode",
            "format": "int32"
          },
          "parameter": {
            "type": "string",
            "description": "Parameter name",
            "nullable": true
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "examinationType": {
            "type": "string",
            "description": "Examination type name",
            "nullable": true
          },
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "result": {
            "type": "number",
            "description": "Measurement result",
            "format": "double"
          },
          "resultElevationCorrected": {
            "type": "number",
            "description": "Elevation corrected result. Only available for Water Level examination",
            "format": "double",
            "nullable": true
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Unit name",
            "nullable": true
          },
          "loggerId": {
            "type": "string",
            "description": "Id of the logger that provided the measurement result",
            "nullable": true
          },
          "formulaId": {
            "type": "string",
            "description": "Formula id",
            "nullable": true
          },
          "createdTimestamp": {
            "type": "string",
            "description": "The timestamp when the result was delivered/created. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "reasonSc": {
            "type": "integer",
            "description": "Reason stancode",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason name",
            "nullable": true
          },
          "vegetationIndex": {
            "type": "integer",
            "description": "Vegetation index",
            "format": "int32",
            "nullable": true
          },
          "refPointText": {
            "type": "string",
            "description": "Reference point text",
            "nullable": true
          },
          "distToFixPointM": {
            "type": "number",
            "description": "Distance to fix point in meter (m)",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.ResultStreamlineResponse": {
        "type": "object",
        "properties": {
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode",
            "format": "int32"
          },
          "parameter": {
            "type": "string",
            "description": "Parameter name",
            "nullable": true
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "examinationType": {
            "type": "string",
            "description": "Examination type name",
            "nullable": true
          },
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "result": {
            "type": "number",
            "description": "Measurement result",
            "format": "double"
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Unit name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.StationResponse": {
        "type": "object",
        "properties": {
          "stationUid": {
            "type": "string",
            "description": "Vanda station GUID id",
            "format": "uuid"
          },
          "stationId": {
            "type": "string",
            "description": "A 8-digits station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          },
          "oldStationNumber": {
            "type": "string",
            "description": "Old station number",
            "nullable": true
          },
          "locationType": {
            "type": "string",
            "description": "Location type name",
            "nullable": true
          },
          "locationTypeSc": {
            "type": "integer",
            "description": "Location type stancode",
            "format": "int32"
          },
          "stationOwnerCvr": {
            "type": "string",
            "description": "Station owner cvr number",
            "nullable": true
          },
          "stationOwnerName": {
            "type": "string",
            "description": "Station owner name",
            "nullable": true
          },
          "operatorCvr": {
            "type": "string",
            "description": "Operator cvr number",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "description": "Operator name",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Station name",
            "nullable": true
          },
          "dguNumber": {
            "type": "string",
            "description": "DGU number of Groundwater station",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Station description",
            "nullable": true
          },
          "loggerId": {
            "type": "string",
            "description": "Logger id",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.LocationResponse"
          },
          "measurementPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.StationResponse_MeasurementPoint"
            },
            "description": "A list of measurement points data in station",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.StationResponse_MeasurementPoint": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Measurement point number in a station",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Measurement point name",
            "nullable": true
          },
          "measurementPointType": {
            "type": "string",
            "description": "Measurement point type name",
            "nullable": true
          },
          "measurementPointTypeSc": {
            "type": "integer",
            "description": "Measurement point type stancode",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Measurement point description",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.LocationResponse"
          },
          "intakeNumber": {
            "type": "integer",
            "description": "Intake number of Grundvand station",
            "format": "int32",
            "nullable": true
          },
          "examinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.StationResponse_MeasurementPoint_Examination"
            },
            "description": "A list of examination performed on the measurement point",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.StationResponse_MeasurementPoint_Examination": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "description": "Parameter name",
            "nullable": true
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode",
            "format": "int32",
            "nullable": true
          },
          "examinationType": {
            "type": "string",
            "description": "Examination type name",
            "nullable": true
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Unit name",
            "nullable": true
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode",
            "format": "int32",
            "nullable": true
          },
          "firstResult": {
            "type": "string",
            "description": "A time when the first result was measured",
            "format": "date-time",
            "nullable": true
          },
          "latestResult": {
            "type": "string",
            "description": "A time when the last result was measured",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.SuccessfulResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Measurement datetime",
            "format": "date-time"
          },
          "action": {
            "type": "string",
            "description": "Action is either 'committed' or 'ignored'. 'committed' if written to database, 'ignored' is result already existed at the given measurementDatetime (Independent of result value)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.UpdateMeasurementsResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "The time data is stored in the database for the batch",
            "format": "date-time"
          },
          "transactionId": {
            "type": "string",
            "description": "Batch transaction id",
            "format": "uuid",
            "nullable": true
          },
          "successful": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.SuccessfulResponse"
            },
            "description": "A list of measurements that were stored",
            "nullable": true
          },
          "failed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.FailedResponse"
            },
            "description": "A list of measurements that were failed to store",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.WaterLevelMeasurementResultStreamlineResponse": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "string",
            "description": "A 8-digit station id",
            "nullable": true
          },
          "operatorStationId": {
            "type": "string",
            "description": "Operator station id",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dmp.Hydro.Api.Responses.WaterLevelResultStreamlineResponse"
            },
            "description": "Measurement results",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dmp.Hydro.Api.Responses.WaterLevelResultStreamlineResponse": {
        "type": "object",
        "properties": {
          "measurementPointNumber": {
            "type": "integer",
            "description": "Measurement point number",
            "format": "int32"
          },
          "parameterSc": {
            "type": "integer",
            "description": "Parameter stancode",
            "format": "int32"
          },
          "parameter": {
            "type": "string",
            "description": "Parameter name",
            "nullable": true
          },
          "examinationTypeSc": {
            "type": "integer",
            "description": "Examination type stancode",
            "format": "int32"
          },
          "examinationType": {
            "type": "string",
            "description": "Examination type name",
            "nullable": true
          },
          "measurementDateTime": {
            "type": "string",
            "description": "Measurement date time. Must be defined without second component as an UTC timestamp in the RFC 3339 date+time format. For example '2023-09-21T14:34Z'.",
            "format": "date-time"
          },
          "result": {
            "type": "number",
            "description": "Measurement result at the time (CreateTimestamp property)",
            "format": "double"
          },
          "resultElevationCorrected": {
            "type": "number",
            "description": "Elevation corrected result. Only available for Water Level examination",
            "format": "double",
            "nullable": true
          },
          "unitSc": {
            "type": "integer",
            "description": "Unit stancode",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Unit name",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://log-in.test.miljoeportal.dk/runtime/oauth2/authorize.idp",
            "tokenUrl": "https://log-in.test.miljoeportal.dk/runtime/oauth2/token.idp",
            "scopes": {
              "openid": "OpenId scope"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}